name: Build and Deploy

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  packages: write

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # - name: Lint with ruff
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
      #     # default set of ruff rules with GitHub Annotations
      #     ruff --format=github --target-version=py37 .
      - name: Test with pytest
        run: |

  build:
    needs: unit-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Docker tags
        run: |
          echo "tag=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Log into GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - id: agent
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: DockWizard/DockWizard_agent
          token: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: Download latest agent
        run: |
          curl -o /tmp/latest.tar.gz -L -H "Authorization: token ${{ secrets.SERVICE_ACCOUNT_KEY }}" "https://api.github.com/repos/DockWizard/DockWizard_agent/releases/assets/${{ steps.agent.outputs.id }}"
          tar xvf /tmp/latest.tar.gz
          mv dockwizard-agent ./backend/api/assets/agent

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: backend/api
          tags: ghcr.io/dockwizard/backend:${{ env.tag }}
          build-args: |
            MONGO_ROOT_PASSWORD=${{secrets.MONGO_ROOT_PASSWORD}}
            NODE_ENV=production

      - name: Deploy to K8s
        run: |
          curl -L "https://get.helm.sh/helm-v3.11.2-linux-amd64.tar.gz" -o - | tar xvz
          mv linux-amd64/helm ./helm
          chmod +x ./helm

          echo "${{ secrets.KUBERNETES_SECRET }}" > /tmp/kubeconfig
          export KUBECONFIG=/tmp/kubeconfig
          ./helm upgrade --install --namespace dockwizard -f deploy/dockwizard-backend/values.yaml dockwizard-backend ./deploy/dockwizard-backend --set image.tag=${{ env.tag }}
